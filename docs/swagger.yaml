openapi: 3.0.0
info:
  title: Meal Planner API
  description: API for managing daily meal plans, recipes, and notifications.
  version: 1.0.0
servers:
  - url: http://localhost:8080/api
paths:
  /recettes:
    get:
      summary: Get all recipes
      responses:
        '200':
          description: A list of recipes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recette'
    post:
      summary: Add a new recipe
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recette'
      responses:
        '201':
          description: Recipe created

  /recettes/{id}:
    get:
      summary: Get a recipe by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Recipe details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recette'
    put:
      summary: Update a recipe by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recette'
      responses:
        '200':
          description: Recipe updated
    delete:
      summary: Delete a recipe by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Recipe deleted

  /notifications:
    post:
      summary: Send a notification
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notification'
      responses:
        '200':
          description: Notification sent

  /meteo:
    get:
      summary: Get weather data for a location
      parameters:
        - name: city
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Weather details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meteo'

components:
  schemas:
    Recette:
      type: object
      properties:
        id:
          type: integer
        nom:
          type: string
        ingredients:
          type: string
        prix:
          type: number
        pays:
          type: string
        saison:
          type: string
    Notification:
      type: object
      properties:
        message:
          type: string
        type:
          type: string
          enum: [breakfast, lunch, dinner]
    Meteo:
      type: object
      properties:
        city:
          type: string
        temperature:
          type: number
        description:
          type: string
